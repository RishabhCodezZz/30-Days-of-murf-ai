# üéôÔ∏è Murf AI Voice Agent

> **Real-time voice conversation system powered by advanced AI**

A sophisticated voice interaction platform that enables natural conversations with AI through seamless integration of speech recognition, intelligent response generation, and high-quality voice synthesis technologies.

---

## Key Features

üéØ **Real-time Speech Recognition** - Instant speech-to-text conversion with high accuracy  
üß† **AI-Powered Conversations** - Intelligent responses generated by Google Gemini  
üîä **Natural Voice Synthesis** - Human-like speech output via Murf AI  
‚ö° **WebSocket Streaming** - Low-latency real-time audio processing  
üé® **Modern Interface** - Clean, responsive user interface design  

---

## Installation & Setup

### Prerequisites
```bash
pip install -r requirements.txt
```

### Environment Configuration
Configure your API credentials by creating an environment file:

1. Copy the sample configuration:
   ```bash
   cp .env.sample .env
   ```

2. Add your API keys to the `.env` file:
   ```env
   ASSEMBLYAI_API_KEY=your_assemblyai_key_here
   GEMINI_API_KEY=your_gemini_key_here
   MURF_API_KEY=your_murf_key_here
   ```

### Application Launch
```bash
python run.py
```


### Access the Application
Navigate to: **http://localhost:8000**

---

## API Service Configuration

The following services are required for full functionality:

| Service | Purpose | Registration |
|---------|---------|--------------|
| **AssemblyAI** | Speech-to-text transcription | [Create Account](https://www.assemblyai.com/) |
| **Google Gemini** | AI response generation | [Get API Key](https://ai.google.dev/) |
| **Murf AI** | Text-to-speech synthesis | [Sign Up](https://murf.ai/) |

---

## Technical Architecture

The application is built using the following technologies:

- **Backend Framework**: FastAPI with WebSocket support
- **Frontend**: HTML5, CSS3, and vanilla JavaScript
- **Speech Recognition**: AssemblyAI API
- **AI Processing**: Google Gemini API
- **Voice Synthesis**: Murf API
- **Real-time Communication**: WebSocket protocol

---

## Usage Instructions

1. **Initiate Recording** - Click the microphone button to begin
2. **Voice Input** - Speak clearly into your microphone
3. **Real-time Transcription** - View live speech-to-text conversion
4. **AI Response** - Receive intelligent audio responses
5. **End Session** - Click the microphone button to stop recording

---

## Troubleshooting

Common issues and their resolutions:

### üö´ **Microphone Access Issues**
- Verify browser permissions for microphone access
- Test microphone functionality in other applications
- Ensure HTTPS connection for secure microphone access
- Check browser compatibility (Chrome, Firefox, Safari recommended)

### üîë **API Authentication Errors**
- Verify API keys are correctly configured in `.env` file
- Confirm API account quotas and billing status
- Ensure environment file is located in the project root directory
- Check for trailing spaces or formatting issues in API keys

### üåê **Connection Problems**
- Verify port 8000 availability
- Check firewall and network security settings
- Confirm application server is running
- Test with different browsers for compatibility

### üîä **Audio Output Issues**
- Verify browser audio permissions and settings
- Check system volume levels
- Clear browser cache and refresh the application
- Test audio functionality with other web applications

### ‚ö° **Performance Issues**
- Ensure stable internet connection
- Close unnecessary browser tabs and applications
- Restart the application server
- Monitor system resource usage

### Additional Support

For persistent issues:
1. Check browser developer console for error messages
2. Verify all dependencies are properly installed
3. Confirm Python version compatibility (3.8+)
4. Consider using a fresh virtual environment

---

## System Requirements

- **Python**: Version 3.8 or higher
- **Browser**: Chrome, Firefox, or Safari (latest versions)
- **Network**: Stable internet connection for API calls
- **Hardware**: Functional microphone and audio output device


